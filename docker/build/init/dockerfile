#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

#Depending on the operating system of the host machines(s) that will build or run the containers, the image specified in the FROM statement may need to be changed.
#For more information, please see https://aka.ms/containercompat
ARG BUILD_IMAGE
ARG BASE_IMAGE
ARG SOLUTION_IMAGE

FROM ${SOLUTION_IMAGE} as solution
FROM ${BASE_IMAGE} AS base

WORKDIR /app

FROM ${BUILD_IMAGE} AS build

WORKDIR /src

COPY ["Sitecore.Demo.Init.csproj", ""]

RUN dotnet restore "./Sitecore.Demo.Init.csproj"

COPY . .

WORKDIR "/src/."

RUN dotnet build "Sitecore.Demo.Init.csproj" -c Release -o /app/build

FROM build AS publish

RUN dotnet publish "Sitecore.Demo.Init.csproj" -c Release -o /app/publish

FROM ${BUILD_IMAGE} AS downloadnodejs

ARG NODEJS_VERSION
ENV NODEJS_VERSION=${NODEJS_VERSION}
RUN echo %NODEJS_VERSION%

SHELL ["pwsh", "-Command", "$ErrorActionPreference = 'Stop';$ProgressPreference='silentlyContinue';"]

ADD https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-win-x64.zip C:\\nodejs.zip

RUN Expand-Archive nodejs.zip -DestinationPath C:\;

RUN Rename-Item "C:\node-v$($env:NODEJS_VERSION)-win-x64" c:\nodejs

FROM base AS final

USER ContainerAdministrator

ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV HOST_CD=placeholder
ENV HOST_CM=placeholder
ENV HOST_PS=placeholder
ENV HOST_ID=placeholder
ENV ADMIN_USER_NAME=placeholder
ENV ADMIN_PASSWORD=placeholder

WORKDIR /app

COPY --from=downloadnodejs /nodejs /nodejs

ENV PATH="C:\Windows\system32;C:\Windows;;C:\Program Files\dotnet;C:\nodejs"

RUN npm i -g vercel

COPY --from=publish /app/publish .
COPY --from=solution /artifacts/src/rendering/ ./rendering
COPY --from=solution /artifacts/src/tv ./tv
COPY --from=solution /artifacts/src/kiosk ./kiosk
COPY --from=solution /artifacts/src/EdgeWebsite.module.json ./src/
COPY --from=solution /artifacts/src/EdgeWebsite-Content.module.json ./src/
COPY --from=solution /artifacts/src/InitItems.module.json ./src/
COPY --from=solution /artifacts/src/Roles.module.json ./src/
COPY --from=solution /artifacts/src/items/ ./src/items

COPY ./sitecore.json .

RUN dotnet new manifest
RUN dotnet nuget add source https://sitecore.myget.org/F/sc-packages/api/v3/index.json --name "Sitecore-Public-Nuget-Feed"
RUN dotnet tool install --add-source=https://sitecore.myget.org/F/sc-packages/api/v3/index.json sitecore.cli

RUN mkdir status
ENTRYPOINT ["dotnet", "Sitecore.Demo.Init.dll"]