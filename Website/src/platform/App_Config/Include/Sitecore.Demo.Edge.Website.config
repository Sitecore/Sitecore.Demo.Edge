<?xml version="1.0"?>

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/"
               xmlns:set="http://www.sitecore.net/xmlconfig/set/">
  <sitecore>
    <settings>
      <setting name="ItemNameAllowMixingReplacementCharacters" value="false" />
      <setting name="ExperienceEdge.EnableItemLanguageFallback" value="true"/>
      <setting name="ExperienceEdge.EnableFieldLanguageFallback" value="true"/>
    </settings>

    <links>
      <urlBuilder>
        <languageEmbedding>never</languageEmbedding>
        <lowercaseUrls>true</lowercaseUrls>
      </urlBuilder>
    </links>

    <sites>
      <!--
        JSS Site Registration
        This configures the site with Sitecore - i.e. host headers, item paths.
        If your JSS app lives within an existing Sitecore site, this may not be necessary.
      -->
      <site name="edgewebsite"
            inherits="website"
            hostName="*"
            rootPath="/sitecore/content/EdgeWebsite" 
            enableItemLanguageFallback="true" 
            enableFieldLanguageFallback="true"
            patch:before="site[@name='website']" />

      <!-- 
        Set as default content start item in Content Editor
        Enable language fallback for Content Editor and Experience Editor 
      -->
      <site name="shell">
        <patch:attribute name="contentStartItem">/EdgeWebsite/home</patch:attribute>
        <patch:attribute name="enableItemLanguageFallback">true</patch:attribute>
        <patch:attribute name="enableFieldLanguageFallback">true</patch:attribute>
      </site>
      <!-- Enable language fallback for any future sites that inherit from website -->
      <site name="website">
        <patch:attribute name="enableItemLanguageFallback">true</patch:attribute>
        <patch:attribute name="enableFieldLanguageFallback">true</patch:attribute>
      </site>
    </sites>
    <javaScriptServices>
      <apps>
        <!--
          JSS App Registration
          The JSS app needs to be registered in order to support layout service and import services.

          There are many available attributes, and they inherit the defaults if not explicitly specified here.
          Defaults are defined in `/App_Config/Sitecore/JavaScriptServices/Sitecore.JavaScriptServices.Apps.config`

          NOTE: graphQLEndpoint enables _Integrated GraphQL_. If not using integrated GraphQL, it can be removed.

          NOTE: This app configuration assumes a Sitecore-first approach and thus disables the JSS Workflow for
          initial app import, and does not protect imported items.
        -->
        <app name="edgewebsite"
             sitecorePath="/sitecore/content/EdgeWebsite"
             graphQLEndpoint="/sitecore/api/graph/edge"
             serverSideRenderingEngine="http"
             serverSideRenderingEngineEndpointUrl="$(env:RENDERING_HOST_ENDPOINT_URI)"
             serverSideRenderingEngineApplicationUrl="$(env:RENDERING_HOST_PUBLIC_URI)"
             useLanguageSpecificLayout="true"
             defaultWorkflow=""
             protectDeveloperItems="false"
             deploymentSecret="$(env:JSS_EdgeWebsite_DEPLOYMENT_SECRET)"
             debugSecurity="false"
             inherits="defaults" />
      </apps>    

      <renderEngines>
        <renderEngine name="http">
          <instance id="defaults">
            <!-- When EnableRelativeLinkProcessing is enabled, requests from Horizon/EE are taking a very long time. Disabling it does not seem to affect editing. -->
            <EnableRelativeLinkProcessing>false</EnableRelativeLinkProcessing>
          </instance>
        </renderEngine>
      </renderEngines>
    </javaScriptServices>

    <!--
      Since this solution is designed for Sitecore-first JSS workflow, remove editor
      warnings regarding import overwrites.
    -->
    <pipelines>
      <group groupName="javaScriptServices">
        <pipelines>
            <item.getItemNotifications>
              <processor type="Sitecore.JavaScriptServices.AppServices.Pipelines.GetItemNotifications.IsItemAllowedForOverwrite, Sitecore.JavaScriptServices.AppServices">
                <patch:delete />
              </processor>
          </item.getItemNotifications>
        </pipelines>
      </group>
      <group groupName="layoutService">
        <pipelines>
          <getLayoutServiceContext>
            <processor type="Sitecore.Demo.Edge.Website.Pipelines.DemoContextExtension, Sitecore.Demo.Edge.Website" resolve="true">
              <ConfigItemPath>/sitecore/content/EdgeWebsite/Data/Config</ConfigItemPath>
              <StartDateFieldName>StartDate</StartDateFieldName>
              <PageTitleFIeldName>SiteBrowserTitle</PageTitleFIeldName>
            </processor>
          </getLayoutServiceContext>
        </pipelines>
      </group>
      <!-- DEMO TEAM CUSTOMIZATION - Delete the requestEnd Horizon processor that adds the frame-ancestors content-security-policy. We instead included it in our own content-security-policy. -->
      <mvc.requestEnd>
        <processor type="Sitecore.Horizon.Integration.OnPrem.Pipelines.MvcRequestEnd.RegisterIFrameAllowedDomainsMvc, Sitecore.Horizon.Integration.OnPrem">
          <patch:delete />
        </processor>
      </mvc.requestEnd>
      <!-- END CUSTOMIZATION -->
    </pipelines>
  </sitecore>
</configuration>
